version: "2.1" #3.3
services:
  # Application
  api:
    build: ./api
    ports:
      - "5000:80"
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: demo.api
    depends_on:
      queue:
        condition: service_healthy
  func:
    build: ./func
    environment:
      RABBITMQ_CONNECTION_STRING: "amqp://demo:demo@queue:5672"
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: demo.func
    depends_on:
      queue:
        condition: service_healthy
  # Infrastructure
  queue:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: "demo"
      RABBITMQ_DEFAULT_PASS: "demo"
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./config/rabbitmq_definitions.json:/etc/rabbitmq/definitions.json
    healthcheck:
      timeout: 5s
      interval: 5s
      retries: 5
      test:
        - "CMD"
        - "rabbitmqctl"
        - "status"
  fluentd:
    build: ./fluentd
    volumes:
      - ./config/fluent.conf:/fluentd/etc/fluent.conf
    links:
      - "elasticsearch"
    ports:
      - "24224:24224"
      - "24224:24224/udp"
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    environment:
      - "discovery.type=single-node"
    expose:
      - "9200"
    ports:
      - "9200:9200"
  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.1
    links:
      - "elasticsearch"
    ports:
      - "5601:5601"